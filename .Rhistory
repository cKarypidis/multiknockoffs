theme(legend.title=element_blank(), legend.text=element_text(size=10))+
geom_hline(yintercept = 20, linetype = "dashed", color = "darkgreen")
p2
long.dat2 <- melt(setDT(dat.rho[,c(1,8:13)]), id.vars = c("rho"))
p3 <- ggplot(data=long.dat2, aes(x=rho, y=value*100, group=variable))
p4 <- p3 + geom_line(aes(color=variable), size=0.75) +
geom_point(aes(color=variable), size =1.5) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("Correlation strength $\\rho$"), y = "Power  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 105)) +
scale_x_continuous(breaks = seq(0.2, 0.8, 0.1)) +
#theme(legend.position="none")
theme(legend.title=element_blank(), legend.text=element_text(size=10))
p4
# Variation SNR -----------------------------------------------------------
dat <- res.SNR
#Manipulate first col
dat[,1] <- 1:5
colnames(dat)[1] <- "SNR"
colnames(dat.rho) <-c("SNR", "KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25",
"KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25")
#Manipulate first col
dat[,1] <- 1:5
colnames(dat)[1] <- "SNR"
colnames(dat.rho) <-c("SNR", "KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25",
"KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25")
long.dat<- melt(setDT(dat[,1:7]), id.vars = c("SNR"))
p11 <- ggplot(data=long.dat, aes(x=SNR, y=value*100, group=variable))
p21 <- p11 + geom_line(aes(color=variable), size=0.75) +
theme(panel.grid.minor = element_blank()) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("SNR"), y = "FDR  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 26)) +
theme(legend.title=element_blank(), legend.text=element_text(size=10))+
geom_hline(yintercept = 20, linetype = "dashed", color = "darkgreen")
p21
long.dat2 <- melt(setDT(dat[,c(1,8:13)]), id.vars = c("SNR"))
p31 <- ggplot(data=long.dat2, aes(x=SNR, y=value*100, group=variable))
p41 <- p31 + geom_line(aes(color=variable), size=0.75) +
theme(panel.grid.minor = element_blank()) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("SNR$"), y = "Power  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 105)) +
#theme(legend.position="none")
theme(legend.title=element_blank(), legend.text=element_text(size=10))
p41
colnames(dat) <-c("SNR", "KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25",
"KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25")
long.dat<- melt(setDT(dat[,1:7]), id.vars = c("SNR"))
p11 <- ggplot(data=long.dat, aes(x=SNR, y=value*100, group=variable))
p21 <- p11 + geom_line(aes(color=variable), size=0.75) +
theme(panel.grid.minor = element_blank()) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("SNR"), y = "FDR  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 26)) +
theme(legend.title=element_blank(), legend.text=element_text(size=10))+
geom_hline(yintercept = 20, linetype = "dashed", color = "darkgreen")
p21
long.dat2 <- melt(setDT(dat[,c(1,8:13)]), id.vars = c("SNR"))
p31 <- ggplot(data=long.dat2, aes(x=SNR, y=value*100, group=variable))
p41 <- p31 + geom_line(aes(color=variable), size=0.75) +
theme(panel.grid.minor = element_blank()) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("SNR$"), y = "Power  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 105)) +
#theme(legend.position="none")
theme(legend.title=element_blank(), legend.text=element_text(size=10))
p41
dat <- res.s0[-1,]
#Manipulate first col
dat[,1] <- c(10,15,20,25,30,40,50,60,70)
colnames(dat)[1] <- "s0"
dat <- res.s0[-1,]
#Manipulate first col
dat[,1] <- c(10,15,20,25,30,40,50,60,70)
colnames(dat)[1] <- "s0"
colnames(dat) <-c("s0", "KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25",
"KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25")
long.dat<- melt(setDT(dat[,1:7]), id.vars = c("s0"))
p12 <- ggplot(data=long.dat, aes(x=s0, y=value*100, group=variable))
p22 <- p12 + geom_line(aes(color=variable), size=0.75) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
theme(panel.grid.minor = element_blank()) +
labs(x =  TeX("Sparsity level $|S_{0}|$"), y = "FDR  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 36), breaks = seq(0,35,5)) +
scale_x_continuous(breaks = seq(0,70,10))+
theme(legend.title=element_blank(), legend.text=element_text(size=10))+
geom_hline(yintercept = 20, linetype = "dashed", color = "darkgreen")
p22
long.dat2 <- melt(setDT(dat[,c(1,8:13)]), id.vars = c("s0"))
p32 <- ggplot(data=long.dat2, aes(x=s0, y=value*100, group=variable))
p42 <- p32 + geom_line(aes(color=variable), size=0.75) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
theme(panel.grid.minor = element_blank()) +
labs(x =  TeX("Sparsity level $|S_{0}|$"), y = "Power  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 105)) +
scale_x_continuous(breaks = seq(0,70,10))+
#theme(legend.position="none")
theme(legend.title=element_blank(), legend.text=element_text(size=10))
p42
#Read in all results
library(ggplot2)
library(reshape2)
library(latex2exp)
library(ggpubr)
#Equicorrelated
#Ada
res.s0 <-  read.csv("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Simulation/Equi/ADA_k/res_vars0.csv")
res.rho <- read.csv("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Simulation/Equi/ADA_k/res_varrho.csv")
res.SNR <- read.csv("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Simulation/Equi/ADA_k/res_varSNR.csv")
library(data.table)
# Variation n -------------------------------------------------------------
# Variation rho -----------------------------------------------------------
dat.rho <- res.rho
dat.rho[,1] <- c(0.2,0.3,0.4,0.5,0.6,0.7,0.8)
colnames(dat.rho) <-c("rho", "KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25",
"KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25")
long.dat <- melt(setDT(dat.rho[,c(1:7)]), id.vars = c("rho"))
p1 <- ggplot(data=long.dat, aes(x=rho, y=value*100, group=variable))
p2 <- p1 + geom_line(aes(color=variable), size=0.75) +
geom_point(aes(color=variable), size =1.5) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("Correlation strength $\\rho$"), y = "FDR  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 26)) +
scale_x_continuous(breaks = seq(0.2, 0.8, 0.1)) +
theme(legend.title=element_blank(), legend.text=element_text(size=10))+
geom_hline(yintercept = 20, linetype = "dashed", color = "darkgreen")
p2
long.dat2 <- melt(setDT(dat.rho[,c(1,8:13)]), id.vars = c("rho"))
p3 <- ggplot(data=long.dat2, aes(x=rho, y=value*100, group=variable))
p4 <- p3 + geom_line(aes(color=variable), size=0.75) +
geom_point(aes(color=variable), size =1.5) +
theme(panel.grid.minor = element_blank()) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("Correlation strength $\\rho$"), y = "Power  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 105)) +
scale_x_continuous(breaks = seq(0.2, 0.8, 0.1)) +
#theme(legend.position="none")
theme(legend.title=element_blank(), legend.text=element_text(size=10))
p4
#figure <- ggarrange(p2, p4, ncol = 2, nrow = 1, common.legend = T)
#figure
#ggsave(path = "C:/Users/Valanti/Google Drive/Masterarbeit/Arbeit/Pictures/use",
#     filename = "MultiKnockockSim1.pdf")
###############################################################################
# Variation SNR -----------------------------------------------------------
dat <- res.SNR
#Manipulate first col
dat[,1] <- 1:5
colnames(dat)[1] <- "SNR"
colnames(dat) <-c("SNR", "KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25",
"KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25")
long.dat<- melt(setDT(dat[,1:7]), id.vars = c("SNR"))
p11 <- ggplot(data=long.dat, aes(x=SNR, y=value*100, group=variable))
p21 <- p11 + geom_line(aes(color=variable), size=0.75) +
theme(panel.grid.minor = element_blank()) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("SNR"), y = "FDR  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 26)) +
theme(legend.title=element_blank(), legend.text=element_text(size=10))+
geom_hline(yintercept = 20, linetype = "dashed", color = "darkgreen")
p21
long.dat2 <- melt(setDT(dat[,c(1,8:13)]), id.vars = c("SNR"))
p31 <- ggplot(data=long.dat2, aes(x=SNR, y=value*100, group=variable))
p41 <- p31 + geom_line(aes(color=variable), size=0.75) +
theme(panel.grid.minor = element_blank()) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
labs(x =  TeX("SNR$"), y = "Power  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 105)) +
#theme(legend.position="none")
theme(legend.title=element_blank(), legend.text=element_text(size=10))
p41
#figure <- ggarrange(p2, p4, ncol = 2, nrow = 1, common.legend = T)
#figure
#ggsave(path = "C:/Users/Valanti/Google Drive/Masterarbeit/Arbeit/Pictures/use",
#     filename = "MultiKnockockSim2.pdf")
# Var Sparsity ------------------------------------------------------------
dat <- res.s0[-1,]
#Manipulate first col
dat[,1] <- c(10,15,20,25,30,40,50,60,70)
colnames(dat)[1] <- "s0"
colnames(dat) <-c("s0", "KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25",
"KO", "ADAGES K=5" , "ADAGES K=10", "ADAGES K=15", "ADAGES K=20", "ADAGES K=25")
long.dat<- melt(setDT(dat[,1:7]), id.vars = c("s0"))
p12 <- ggplot(data=long.dat, aes(x=s0, y=value*100, group=variable))
p22 <- p12 + geom_line(aes(color=variable), size=0.75) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
theme(panel.grid.minor = element_blank()) +
labs(x =  TeX("Sparsity level $|S_{0}|$"), y = "FDR  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 36), breaks = seq(0,35,5)) +
scale_x_continuous(breaks = seq(0,70,10))+
theme(legend.title=element_blank(), legend.text=element_text(size=10))+
geom_hline(yintercept = 20, linetype = "dashed", color = "darkgreen")
p22
long.dat2 <- melt(setDT(dat[,c(1,8:13)]), id.vars = c("s0"))
p32 <- ggplot(data=long.dat2, aes(x=s0, y=value*100, group=variable))
p42 <- p32 + geom_line(aes(color=variable), size=0.75) +
geom_point(aes(color=variable), size =1.5) +
theme(axis.text=element_text(size=8 , color="black"), axis.title =element_text(size=10 , color="black") ) +
theme(panel.grid.minor = element_blank()) +
labs(x =  TeX("Sparsity level $|S_{0}|$"), y = "Power  (%)") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 105)) +
scale_x_continuous(breaks = seq(0,70,10))+
#theme(legend.position="none")
theme(legend.title=element_blank(), legend.text=element_text(size=10))
p42
#figure <- ggarrange(p2, p4, ncol = 2, nrow = 1, common.legend = T)
#figure
#ggsave(path = "C:/Users/Valanti/Google Drive/Masterarbeit/Arbeit/Pictures/use",
#filename = "MultiKnockockSim3.pdf")
#####################################################################
#Picture with all 6
figure <- ggarrange(p2, p4, p21, p41, p22, p42, ncol = 2, nrow = 3, common.legend = T)
figure
ggsave(path = "C:/Users/Valanti/Google Drive/Masterarbeit/Arbeit/Pictures/use",
filename = "MultiKnockockSimADAK.pdf", width = 210, height = 297, units = "mm")
ggsave(path = "C:/Users/Valanti/Google Drive/Masterarbeit/Arbeit/Pictures/use",
filename = "MultiKnockockSimADAk.pdf", width = 210, height = 297, units = "mm")
figure <- ggarrange(p2, p4, p21, p41, p22, p42, ncol = 2, nrow = 3, common.legend = T)
figure
ggsave(path = "C:/Users/Valanti/Google Drive/Masterarbeit/Arbeit/Pictures/use",
filename = "MultiKnockockSimADAk.pdf", width = 210, height = 297, units = "mm")
ggsave(path = "C:/Users/Valanti/Google Drive/Masterarbeit/Arbeit/Pictures/use",
filename = "MultiKnockockSimADAk.pdf", width = 210, height = 297, units = "mm")
s_0 = c(5,10,15,20,25,30,40,50,60,70)     # number of variables with nonzero coefficients
res_final <- matrix(0, length(s_0), 14)
colnames(res_final) <- c("FDR_Vanilla", "FDR_UKO",
"FDR_ADA5", "FDR_ADA10",
"FDR_ADA15", "FDR_ADA20",
"FDR_ADA25",
"power_Vanilla", "power_UKO",
"power_ADA5", "power_ADA10",
"power_ADA15", "power_ADA20",
"power_ADA25")
rownames(res_final) <- paste("s_0=",sep = "" ,s_0)
#Read in all results
library(ggplot2)
library(reshape2)
library(latex2exp)
library(ggpubr)
#Equicorrelated
#Ada
res.s0 <-  read.csv("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Simulation/Equi/ADA_k/WithUKO/res_vars0.csv")
res.rho <- read.csv("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Simulation/Equi/ADA_k/WithUKO/res_varrho.csv")
res.SNR <- read.csv("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Simulation/Equi/ADA_k/WithUKO/res_varSNR.csv")
library(data.table)
# Variation rho -----------------------------------------------------------
dat.rho <- res.rho
dat.rho[,1] <- c(0.2,0.3,0.4,0.5,0.6,0.7,0.8)
cat_function <- function(love=TRUE){
if(love==TRUE){
print("I love cats!")
}
else {
print("I am not a cool person.")
}
}
install.packages("installr")
library(installr)
updateR()
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
remove.packages("myfirstpackagetest", lib="~/R/win-library/4.1")
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
library(devtools)
install_github("cKarypidis/multiknockoffs")
??run.pKO
??run.uKO
install.packages("hdi")
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
library(devtools)
install_github("cKarypidis/multiknockoffs")
library(multiknockoffs)
library(multiknockoffs)
install_github("cKarypidis/multiknockoffs")
library(devtools)
install_github("cKarypidis/multiknockoffs")
library(multiknockoffs)
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
install_github("cKarypidis/multiknockoffs")
library(devtools)
install_github("cKarypidis/multiknockoffs")
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
# Basic usage with default arguments
res.uKO <- run.uKO(X, y, sets = T)
library(multiknockoffs)
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
# Basic usage with default arguments
res.uKO <- run.uKO(X, y, sets = T)
res.uKO
X <- vector(rnorm(400*200))
X <- as.vector(rnorm(400*200))
# Basic usage with default arguments
res.uKO <- run.uKO(X, y, sets = T)
install_github("cKarypidis/multiknockoffs")
library(devtools)
library(roxygen2)
library(Rcpp)
install_github("cKarypidis/multiknockoffs")
library(multiknockoffs)
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T)
res.ADAGES
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T, type = "BH")
res.ADAGES
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T, type = "BH")
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
library(devtools)
install_github("cKarypidis/multiknockoffs")
library(multiknockoffs)
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T)
res.ADAGES
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T)
res.ADAGES
beta
between(x, 0, 1)
dplyr::between(x, 0, 1)
x <- 2
if(x < 1 && x > 0) == F {print("WONT")}
if(x < 1 && x > 0) = F {print("WONT")}
x <- 2
if(x !< 1 && x !> 0) {print("WONT")}
if(x > 1 | x <0) {print("WONT")}
x <- 0.3
if(x > 1 | x <0) {print("WONT")}
x <- 1.3
if(x > 1 | x <0) (print("WONT"))
if(x > 1 | x <0) (print("WONT"))
if(x > 1 | x <0) {print("WONT")}
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
library(devtools)
install_github("cKarypidis/multiknockoffs")
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
library(multiknockoffs)
# Basic usage with default arguments
res.uKO <- run.uKO(X, y, sets = T)
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T)
res.ADAGES
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T, q = 1.2)
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.ADAGES(X, y, sets = T, q = 1.2)
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.uKO(X, y, sets = T, q = 1.2)
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.uKO(X, y, sets = T, q = 1.2)
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.uKO(X, y, sets = T, q = 1.2)
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.uKO(X, y, sets = T, q = 1.2)
# Basic usage with default arguments
# Basic usage with default arguments
res.ADAGES <- run.uKO(X, y, sets = T, q = 0.2)
q <- c(0.1,0.3)
if(all((q < 0 | q > 1)){
if(all((q < 0 | q > 1)))
q <- c(0.1,0.3)
if(all((q < 0 | q > 1)))
q <- c(0.1,0.3)
if(all(q < 0 | q > 1)){
print('q must be between 0 and 1')
}
q <- c(0.1,1.3)
if(all(q < 0 | q > 1)){
print('q must be between 0 and 1')
}
q <- c(0.1,1.3)
if(any(q < 0 | q > 1)){
print('q must be between 0 and 1')
}
q <- c(0.1,0.3)
if(any(q < 0 | q > 1)){
print('q must be between 0 and 1')
}
q <- c(0.1,0.3,0.4)
if(any(q < 0 | q > 1)){
print('q must be between 0 and 1')
}
q <- c(1.1,0.3,0.4)
if(any(q < 0 | q > 1)){
print('q must be between 0 and 1')
}
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
install_github("cKarypidis/multiknockoffs")
library(devtools)
install_github("cKarypidis/multiknockoffs")
library(multiknockoffs)
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
# Advanced usage with customized knockoff construction (equi-correlated)
equi.knock <- function(X) create.second_order(X, method = "equi")
res.pKO <- run.pKO(X, y, knockoffs = equi.knock, pvals = T)
res.pKO <- run.pKO(X, y, knockoffs = equi.knock, pvals = T, B = 5)
res.pKO
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
library(devtools)
install_github("cKarypidis/multiknockoffs")
library(multiknockoffs)
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
# Advanced usage with customized knockoff construction (equi-correlated)
equi.knock <- function(X) create.second_order(X, method = "equi")
res.pKO <- run.pKO(X, y, knockoffs = equi.knock, pvals = T, B = 5)
res.pKO
library(devtools)
library(roxygen2)
library(Rcpp)
setwd("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Final_Functions")
setwd("./multiknockoffs")
document()
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
library(devtools)
library(roxygen2)
library(Rcpp)
setwd("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Final_Functions")
setwd("./multiknockoffs")
document()
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
install_github("cKarypidis/multiknockoffs")
setwd("C:/Users/Valanti/Google Drive/Masterarbeit/Codes/Multiple knockoffs/Final_Functions")
setwd("./multiknockoffs")
document()
library(devtools)
library(roxygen2)
library(Rcpp)
document()
remove.packages("multiknockoffs", lib="~/R/win-library/4.1")
library(devtools)
library(roxygen2)
library(Rcpp)
install_github("cKarypidis/multiknockoffs")
library(multiknockoffs)
n <- 400; p <- 200; s_0 <- 30
amplitude <- 1; mu <- rep(0,p); rho <- 0.25
Sigma <- toeplitz(rho^(0:(p-1)))
X <- MASS::mvrnorm(n, mu, Sigma)
nonzero <- sample(p, s_0)
beta <- amplitude * (1:p %in% nonzero)
y <- X %*% beta + rnorm(n)
# Basic usage with default arguments
res.uKO <- run.uKO(X, y, sets = TRUE)
res.uKO
